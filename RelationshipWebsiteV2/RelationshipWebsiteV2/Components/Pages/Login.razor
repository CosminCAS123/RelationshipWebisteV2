@page "/login"
@rendermode InteractiveServer
@using Models
@using Services
@inject IUserService userService

<head >
    <link href="~/authpages.css" rel="stylesheet" />
</head>

<div class="d-flex justify-content-center align-items-center text-center" style="height: 100vh; background-color: #f0e5ff;">
    <div class="w-100 p-4" style="max-width: 400px; background-color: #ffffff; border: 2px solid #6c63ff; border-radius: 12px; box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);">
        <h2 class="mb-4" style="color: #6c63ff;">Login to Your Account</h2>

        <EditForm Model="@loginModel" OnValidSubmit="@LoginSubmitted" class="form-container">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email" style="color: #6c63ff;">Email</label>
                <InputText id="email" type="email" class="form-control" placeholder="Enter your email" @bind-Value="loginModel.Email" />
            </div>

            <div class="form-group mt-3">
                <label for="password" style="color: #6c63ff;">Password</label>
                <InputText id="password" type="password" class="form-control" placeholder="Enter your password" @bind-Value="loginModel.Password" />
            </div>
            <p class="form-group mt-3 @(isSuccess ? "success-message" : "failure-message") ">@loginMessage</p>
            <button type="submit" class="btn btn-purple w-100 mt-4" style="background-color: #6c63ff; color: white; border-color: #6c63ff;">Login</button>
        </EditForm>
    </div>
</div>

@code{

    LoginModel loginModel = new LoginModel();
    private bool isSuccess = false;
    private string loginMessage = string.Empty;

    private async Task LoginSubmitted()
    {
        var result = await this.userService.LoginAsync(this.loginModel);
        this.loginMessage = result.Message;
        if (!result.Success)
        {

            this.isSuccess = false;
            return;
        }
        //do later navigation

        this.isSuccess = true;


    }


}

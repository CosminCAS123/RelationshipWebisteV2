@page "/register"
@rendermode InteractiveServer
@using Models
@using Services
@inject IUserService userService
@using Shared

<div class="d-flex justify-content-center align-items-center text-center bg-light" style="height: 100vh;">
    <div class="w-100 p-4 bg-white rounded shadow" style="max-width: 400px;">
        <h2 class="mb-4">Create Your Account</h2>

        <EditForm Model="@registerModel" OnValidSubmit="@RegisterSubmitted" class="form-container">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" placeholder="Enter your username" @bind-Value="registerModel.Username" />
            </div>

            <div class="form-group mt-3">
                <label for="email">Email</label>
                <InputText id="email" type="email" class="form-control" placeholder="Enter your email" @bind-Value="registerModel.Email" />
            </div>

            <div class="form-group mt-3">
                <label for="password">Password</label>
                <InputText id="password" type="password" class="form-control" placeholder="Enter your password" @bind-Value="registerModel.Password" />
            </div>

            <div class="form-group mt-3">
                <label for="confirmpassword">Confirm Password</label>
                <InputText id="confirmpassword" type="password" class="form-control" placeholder="Confirm your password" @bind-Value="registerModel.ConfirmPassword" />
            </div>

            <div class="form-group mt-3">
                <label for="birthDate">Date of Birth</label>
                <DateInput id="birthDate" TValue = "DateOnly" @bind-Value = "registerModel.Birthdate" Placeholder = "Enter your birthdate" class="form-control"
                EnableMinMax = "true" Max="@max" min ="@min" />
            </div>
            <p class="form-group mt-3">@registerMessage</p>
            <button type="submit" class="btn btn-primary w-100 mt-4">Register</button>
        </EditForm>
    </div>
</div>

@code {
    RegisterModel registerModel = new RegisterModel();
    private DateOnly max;
    private DateOnly min;


    private string registerMessage = string.Empty;


    private async Task RegisterSubmitted()
    {

        //try to add to db

        OperationResult result =  await this.userService.RegisterAsync(this.registerModel);

        if (!result.Success)
        {
            this.registerMessage = result.Message;
            return;
        }

        //added to db
        //add later navigation
        this.registerMessage = result.Message;


    }
    protected override void OnInitialized()
    {
        
        max = DateOnly.FromDateTime(DateTime.Now);
        min = max.AddYears(-100);
    }

}
